kind: pipeline
type: docker
name: build

trigger:
  event:
    - push
  branch:
    - master
    - blog

platform:
  os: linux
  arch: amd64

clone:
  retries: 3

steps:
  # 仅用于个人使用，因为我的博客实际上在blog分支
  - name: check_branch
    image: node:20
    environment:
      REAL_TARGET_BRANCH:
        from_secret: REAL_TARGET_BRANCH
    commands:
      - |
        if [ -n "$REAL_TARGET_BRANCH" ]; then
          CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)
          echo "Current branch: $CURRENT_BRANCH"
          echo "Expected branch: $REAL_TARGET_BRANCH"
          if [ "$CURRENT_BRANCH" = "$REAL_TARGET_BRANCH" ]; then
            echo "✓ Branch check passed"
          else
            echo "✗ Branch mismatch!"
            exit 1
          fi
        else
          echo "REAL_TARGET_BRANCH not set, skipping branch check"
        fi

  - name: build_project
    image: node:20
    volumes:
      - name: cache
        path: /drone/src/node_modules
    environment:
      CLOUDFLARE_D1_TOKEN:
        from_secret: CLOUDFLARE_D1_TOKEN
      CLOUDFLARE_D1_ACCOUNT_ID:
        from_secret: CLOUDFLARE_D1_ACCOUNT_ID
      CLOUDFLARE_D1_DATABASE_ID:
        from_secret: CLOUDFLARE_D1_DATABASE_ID
    commands:
      - npm i -g pnpm
      - pnpm i
      - pnpm build

  - name: build_docker
    image: docker:26.0.1
    volumes:
      - name: docker
        path: /var/run/docker.sock
    environment:
      APP_NAME: nuxt3-blog-app
      IMAGE_NAME: nuxt3-blog:latest
      CLOUDFLARE_D1_TOKEN:
        from_secret: CLOUDFLARE_D1_TOKEN
      CLOUDFLARE_D1_ACCOUNT_ID:
        from_secret: CLOUDFLARE_D1_ACCOUNT_ID
      CLOUDFLARE_D1_DATABASE_ID:
        from_secret: CLOUDFLARE_D1_DATABASE_ID
    commands:
      - docker ps -q --filter "name=$APP_NAME" | xargs -r docker stop
      - docker ps -aq --filter "name=$APP_NAME" | xargs -r docker rm
      - docker images --filter "reference=$IMAGE_NAME" -q | xargs -r docker rmi
      - docker build -t $IMAGE_NAME .
      - > 
        docker run -d
        --name=$APP_NAME
        --restart=always
        -e CLOUDFLARE_D1_TOKEN=$CLOUDFLARE_D1_TOKEN
        -e CLOUDFLARE_D1_ACCOUNT_ID=$CLOUDFLARE_D1_ACCOUNT_ID
        -e CLOUDFLARE_D1_DATABASE_ID=$CLOUDFLARE_D1_DATABASE_ID
        -p 127.0.0.1:8451:3000
        $IMAGE_NAME

volumes:
  - name: cache
    host:
      path: /var/cache/drone-nuxt3-blog
  - name: docker
    host:
      path: /var/run/docker.sock

---

kind: pipeline
type: docker
name: backup_img

trigger:
  event:
    - cron
  cron:
    - backup_img

platform:
  os: linux
  arch: amd64

clone:
  retries: 3

steps:
  - name: check_branch
    image: node:20
    environment:
      REAL_TARGET_BRANCH:
        from_secret: REAL_TARGET_BRANCH
    commands:
      - |
        if [ -n "$REAL_TARGET_BRANCH" ]; then
          CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)
          echo "Current branch: $CURRENT_BRANCH"
          echo "Expected branch: $REAL_TARGET_BRANCH"
          if [ "$CURRENT_BRANCH" = "$REAL_TARGET_BRANCH" ]; then
            echo "✓ Branch check passed"
          else
            echo "✗ Branch mismatch!"
            exit 1
          fi
        else
          echo "REAL_TARGET_BRANCH not set, skipping branch check"
        fi

  - name: backup_img
    image: node:20
    volumes:
      - name: cache
        path: /drone/src/node_modules
      - name: imgs
        path: /drone/src/imgs
    environment:
      FILE_USER:
        from_secret: FILE_USER
      FILE_GROUP:
        from_secret: FILE_GROUP
      NB_PASSWD:
        from_secret: NB_PASSWD
      NB_IMG_REGEX:
        from_secret: NB_IMG_REGEX
    commands:
      - npm i -g pnpm
      - pnpm local:generate-img-map
      - pnpm local:download-img


volumes:
  - name: cache
    host:
      path: /var/cache/drone-nuxt3-blog
  - name: imgs
    host:
      path: /data/next-cloud/data/yunyuyuan/files/nuxt3-blog-imgs
